apiVersion: v1
kind: DeploymentConfig
metadata:
   labels:
       appinstance: ${APPNAME}-${SERVICEVERSION}-${UNIQUE_ID}
       appowner: ${APPOWNER}

   name: ${APPNAME}-${SERVICEVERSION}-${UNIQUE_ID}
spec:
  replicas: 1
  strategy:
    resources: {}
    rollingParams:
      intervalSeconds: 1
      maxSurge: 25%
      maxUnavailable: 25%
      timeoutSeconds: 10800
      updatePeriodSeconds: 1
    type: Rolling
  template:
    metadata:
      labels:
        appinstance: ${APPNAME}-${UNIQUE_ID}
        appowner: ${APPOWNER}
    spec:
      containers:
      - env:
        - name: KUBERNETES_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: JAVA_APP_DIR
          value: /deployments
        - name: JAVA_OPTIONS
          value: -Dspring.application.name=${APPNAME}-${SERVICEVERSION}-${UNIQUE_ID} -Dspring.cloud.kubernetes.secrets.name=${APPNAME}-${SERVICEVERSION}-${UNIQUE_ID} -Dspring.cloud.kubernetes.secrets.paths=/tmp/secrets/
        image: ${APPNAME}-${SERVICEVERSION}-${UNIQUE_ID}:${ISTAG}
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /health
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 180
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: spring-boot
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        - containerPort: 9779
          name: prometheus
          protocol: TCP
        - containerPort: 8778
          name: jolokia
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /health
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources: {}
        securityContext:
          privileged: false
        terminationMessagePath: /dev/termination-log
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      securityContext: {}
      terminationGracePeriodSeconds: 30
  test: false
  triggers:
  - type: ConfigChange
  - imageChangeParams:
      automatic: true
      containerNames:
      - spring-boot
      from:
        kind: ImageStreamTag
        name: ${APPNAME}-${SERVICEVERSION}-${UNIQUE_ID}:${ISTAG}
    type: ImageChange
